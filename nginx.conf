
worker_processes  1;

# pid of nginx master process
pid /var/run/nginx.pid;

#error_log logs/error.log;
error_log /tmp/nginx_debug.log debug;
events {
    worker_connections 1024;
}
http {
error_log /tmp/nginx_debug.log debug;

    server {
        listen          81;
        server_name     _;


        location / {
                root /opt/openresty/nginx/html/json/;
        }
    }


    server {
        listen 80;
	ssi on;
	ctpp2 on;

	templates_header x-template;
	templates_root /opt/openresty/nginx/html/templates/;

	location / {
                error_page 405 = $uri;
		
		if ($request_method = 'POST') {
			lua_need_request_body on;
			content_by_lua '
	            local res = ngx.location.capture("/widget/profile", { method = ngx.HTTP_POST, body = ngx.var.request_body} )
		 return ngx.redirect("/");
		';
		}		
                rewrite "^/homepage/page(.*)$" /index.html?page=$1 last;

                if ($args ~ "page=(.+)" ) {
                        set $page $1;
                }
                ssi on;
                root /opt/openresty/nginx/html/;
                add_header "Content-type" "text/html";
                ctpp2 off;
        }

	location /test {
                #rewrite "^/test/(.*)$" /$1 break;
                #ssi on;
		echo hello;
	}
	location @app {
		#rewrite /index.html 	/profile?username=Gabriele	break;
		#proxy_pass http://localhost:8080;		

                add_header "Content-type" "text/html";
		echo_subrequest GET /index.html;
 	}


        location /lua {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }

       location /widget/header {
		rewrite      /widget/([^/]+)  /$1.json  break;
                proxy_pass http://localhost:81;

                add_header "Content-type" "text/html";
                templates_root /opt/openresty/nginx/html/templates/;
                template header.ct2;
        }

       location /widget/profile {
		#rewrite      /widget/([^/]+)  /$1.json  break;
		rewrite      /widget/([^/]+)  /profile?username=Gabriele  break;
                #proxy_pass http://localhost:81;
                proxy_pass http://localhost:8080;

                add_header "Content-type" "text/html";
 
                templates_root /opt/openresty/nginx/html/templates/;
                template profile.ct2;
		
        }

		location /widget/searchuser {
        	#lua_need_request_body on;
			add_header x-template searchuser.ct2;
            add_header Content-type "text/html; charset=UTF-8";

			content_by_lua '
			   	local cjson = require "cjson"
				-- local searchuserbody = "{\"context\" : {\"siteid\":90,\"channelid\":3},\"auth\":{\"token\":\"12b9488e1af77c0888f88342dd54aa0a277e81d1c37937c502933d792356cf37736d6f6b65746573747c31333236333537303735\",\"uid\":\"smoketest\", \"username\":\"smoketest\"}, \"q\":\"username=super\", \"pagecontrol\":{\"page\":0,\"size\":10}}"

				local args = cjson.encode({context = { siteid = 90, channelid = 3}, auth = { token = "bla", uid = "smoketest"}, q = "username=girl", pagecontrol={page=0, size=10}})
                value = {{searchuser = { m = "user", f = "search", a = args } }}
				local wdp_request = cjson.encode(value)
				local res = ngx.location.capture("/proxy/", { method = ngx.HTTP_POST, body = wdp_request } )
				if res.status == 200 then
					ngx.print(res.body)
				end
				ngx.flush(true)
        	';
		}

		location /proxy/ {
				internal;
				#proxy_pass_request_headers off ;
				proxy_set_header "Content-Type" "application/json" ;
				proxy_pass http://localhost:8080;
				#echo $arg_template;
				template searchuser.ct2;
		}

       location /widget/newslist {
				rewrite      /widget/([^/]+)  /$1.json  break;
                proxy_pass http://localhost:81;

                add_header "Content-type" "text/html";
                templates_root /opt/openresty/nginx/html/templates/;
                template newslist.ct2;
        }



    }
}
